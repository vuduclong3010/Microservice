// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjectServiceA.Entity;

#nullable disable

namespace ProjectServiceA.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProjectServiceA.Models.Customer", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728950e",
                            Address = "Nam Định",
                            Avatar = "https://d1hjkbq40fs2x4.cloudfront.net/2017-08-21/files/landscape-photography_1645-t.jpg",
                            Email = "vuduclong3010@gmail.com",
                            IsDeleted = false,
                            Name = "Vu Duc Long",
                            PhoneNumber = "0886632254"
                        });
                });

            modelBuilder.Entity("ProjectServiceA.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IsActive")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("NameReciver")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Node")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalMoney")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728951s",
                            Address = "Nam Định",
                            CustomerId = "0f8fad5b-d9cb-469f-a165-70867728950e",
                            Email = "vuduclong3010@gmail.com",
                            IsActive = "Dang giao",
                            IsDelete = false,
                            NameReciver = "Vu Duc Long",
                            Node = " Khonc co gi",
                            OrderDate = new DateTime(2000, 10, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Phone = "0886632254",
                            TotalMoney = 200000m
                        });
                });

            modelBuilder.Entity("ProjectServiceA.Models.OrderDetail", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("IdProduct")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.Property<int>("ReturnQty")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdProduct");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728952a",
                            IdProduct = "0f8fad5b-d9cb-469f-a165-70867728951a",
                            OrderId = "0f8fad5b-d9cb-469f-a165-70867728951s",
                            Price = 100000m,
                            Qty = 1,
                            ReturnQty = 0,
                            Total = 100000m
                        },
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728952b",
                            IdProduct = "0f8fad5b-d9cb-469f-a165-70867728951b",
                            OrderId = "0f8fad5b-d9cb-469f-a165-70867728951s",
                            Price = 100000m,
                            Qty = 1,
                            ReturnQty = 0,
                            Total = 100000m
                        });
                });

            modelBuilder.Entity("ProjectServiceA.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDelete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Node")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728951a",
                            Description = "Description",
                            IsDelete = false,
                            Name = "Áo dài",
                            Node = "Khong co gi",
                            Price = 100000m,
                            Qty = 10
                        },
                        new
                        {
                            Id = "0f8fad5b-d9cb-469f-a165-70867728951b",
                            Description = "Description",
                            IsDelete = false,
                            Name = "Áo thu đông",
                            Node = "Khong co gi",
                            Price = 100000m,
                            Qty = 10
                        });
                });

            modelBuilder.Entity("ProjectServiceA.Models.Order", b =>
                {
                    b.HasOne("ProjectServiceA.Models.Customer", "Customers")
                        .WithMany()
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customers");
                });

            modelBuilder.Entity("ProjectServiceA.Models.OrderDetail", b =>
                {
                    b.HasOne("ProjectServiceA.Models.Product", "Products")
                        .WithMany()
                        .HasForeignKey("IdProduct");

                    b.HasOne("ProjectServiceA.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId");

                    b.Navigation("Order");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("ProjectServiceA.Models.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
